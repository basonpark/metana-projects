{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/basonpark/Desktop/metana-projects/module-8/merkle-tree/client/src/app/context/Web3Context.tsx"],"sourcesContent":["\"use client\";\n\nimport React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode,\n} from \"react\";\n\n// Types\nexport type NFTSaleState =\n  | \"Paused\"\n  | \"PresaleActive\"\n  | \"PublicSaleActive\"\n  | \"SoldOut\"\n  | \"Revealed\";\n\ntype Web3ContextType = {\n  account: string | null;\n  connect: () => Promise<void>;\n  disconnect: () => void;\n  isConnected: boolean;\n  mintNFT: (quantity: number) => Promise<void>;\n  presaleMint: (proof: string[], index: number) => Promise<void>;\n  currentState: NFTSaleState;\n  totalSupply: number;\n  maxSupply: number;\n  loading: boolean;\n  error: string | null;\n};\n\n// Default context\nconst Web3Context = createContext<Web3ContextType>({\n  account: null,\n  connect: async () => {},\n  disconnect: () => {},\n  isConnected: false,\n  mintNFT: async () => {},\n  presaleMint: async () => {},\n  currentState: \"Paused\",\n  totalSupply: 0,\n  maxSupply: 10000,\n  loading: false,\n  error: null,\n});\n\n// Mock state values for development\nconst MOCK_VALUES = {\n  totalSupply: 1234,\n  maxSupply: 10000,\n  currentState: \"PublicSaleActive\" as NFTSaleState,\n};\n\n// Provider component\nexport function Web3Provider({ children }: { children: ReactNode }) {\n  const [account, setAccount] = useState<string | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [currentState, setCurrentState] = useState<NFTSaleState>(\"Paused\");\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [maxSupply, setMaxSupply] = useState(10000);\n\n  // Connect wallet\n  const connect = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      if (typeof window !== \"undefined\" && window.ethereum) {\n        // Request account access\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        setAccount(accounts[0]);\n        setIsConnected(true);\n\n        // For development, set mock values\n        setCurrentState(MOCK_VALUES.currentState);\n        setTotalSupply(MOCK_VALUES.totalSupply);\n        setMaxSupply(MOCK_VALUES.maxSupply);\n      } else {\n        setError(\"MetaMask is not installed\");\n      }\n    } catch (err: any) {\n      setError(err.message || \"Failed to connect wallet\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnect = () => {\n    setAccount(null);\n    setIsConnected(false);\n  };\n\n  // Mint NFT during public sale\n  const mintNFT = async (quantity: number) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      if (!isConnected) {\n        throw new Error(\"Wallet not connected\");\n      }\n\n      if (currentState !== \"PublicSaleActive\") {\n        throw new Error(\"Public sale is not active\");\n      }\n\n      // In a real implementation, this would call the contract\n      console.log(`Minting ${quantity} NFTs for ${account}`);\n\n      // Mock successful mint\n      setTotalSupply((prev) => prev + quantity);\n\n      // Simulate blockchain delay\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n    } catch (err: any) {\n      setError(err.message || \"Failed to mint NFT\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Presale mint with Merkle proof\n  const presaleMint = async (proof: string[], index: number) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      if (!isConnected) {\n        throw new Error(\"Wallet not connected\");\n      }\n\n      if (currentState !== \"PresaleActive\") {\n        throw new Error(\"Presale is not active\");\n      }\n\n      // In a real implementation, this would call the contract with the proof\n      console.log(\n        `Presale minting for ${account} with proof for index ${index}`\n      );\n\n      // Mock successful mint\n      setTotalSupply((prev) => prev + 1);\n\n      // Simulate blockchain delay\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n    } catch (err: any) {\n      setError(err.message || \"Failed to mint NFT\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Auto-connect if previously connected\n  useEffect(() => {\n    const checkConnection = async () => {\n      if (window.ethereum) {\n        try {\n          const accounts = await window.ethereum.request({\n            method: \"eth_accounts\",\n          });\n          if (accounts.length > 0) {\n            setAccount(accounts[0]);\n            setIsConnected(true);\n\n            // For development, set mock values\n            setCurrentState(MOCK_VALUES.currentState);\n            setTotalSupply(MOCK_VALUES.totalSupply);\n            setMaxSupply(MOCK_VALUES.maxSupply);\n          }\n        } catch (error) {\n          console.error(\"Error checking connection:\", error);\n        }\n      }\n    };\n\n    checkConnection();\n  }, []);\n\n  // Listen for account changes\n  useEffect(() => {\n    if (window.ethereum) {\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length === 0) {\n          disconnect();\n        } else if (accounts[0] !== account) {\n          setAccount(accounts[0]);\n        }\n      };\n\n      window.ethereum.on(\"accountsChanged\", handleAccountsChanged);\n\n      return () => {\n        window.ethereum.removeListener(\n          \"accountsChanged\",\n          handleAccountsChanged\n        );\n      };\n    }\n  }, [account]);\n\n  const contextValue: Web3ContextType = {\n    account,\n    connect,\n    disconnect,\n    isConnected,\n    mintNFT,\n    presaleMint,\n    currentState,\n    totalSupply,\n    maxSupply,\n    loading,\n    error,\n  };\n\n  return (\n    <Web3Context.Provider value={contextValue}>{children}</Web3Context.Provider>\n  );\n}\n\n// Custom hook to use the Web3 context\nexport function useWeb3() {\n  return useContext(Web3Context);\n}\n\n// Add type definitions for window.ethereum\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///Users/basonpark/Desktop/metana-projects/module-8/merkle-tree/client/src/app/components/NFTMinter.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { useWeb3 } from \"../context/Web3Context\";\n\nexport default function NFTMinter() {\n  const {\n    account,\n    connect,\n    disconnect,\n    isConnected,\n    mintNFT,\n    currentState,\n    totalSupply,\n    maxSupply,\n    loading,\n    error,\n  } = useWeb3();\n\n  const [mintAmount, setMintAmount] = useState(1);\n\n  // Handle minting\n  const handleMint = async () => {\n    await mintNFT(mintAmount);\n  };\n\n  // Get badge class based on current state\n  const getBadgeClass = () => {\n    switch (currentState) {\n      case \"Paused\":\n        return \"badge badge-paused\";\n      case \"PresaleActive\":\n        return \"badge badge-presale\";\n      case \"PublicSaleActive\":\n        return \"badge badge-public\";\n      case \"SoldOut\":\n        return \"badge badge-soldout\";\n      case \"Revealed\":\n        return \"badge badge-revealed\";\n      default:\n        return \"badge badge-paused\";\n    }\n  };\n\n  return (\n    <div className=\"max-w-3xl mx-auto\">\n      <div className=\"card backdrop-blur-sm bg-white/90 mb-8\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-8\">\n          <div>\n            <h2 className=\"heading-lg mb-2 text-[#22223B]\">Advanced NFT</h2>\n            <p className=\"body-md text-[#4A4E69]\">\n              Exclusive digital collectibles on the blockchain\n            </p>\n          </div>\n\n          {/* Connection Status */}\n          <div>\n            {isConnected ? (\n              <div className=\"flex flex-col items-end gap-2\">\n                <p className=\"body-sm text-[#4A4E69]\">\n                  Connected:\n                  <span className=\"ml-2 px-3 py-1 bg-[#F2E9E4] text-[#22223B] rounded-full text-xs font-bold\">\n                    {account?.slice(0, 6)}...{account?.slice(-4)}\n                  </span>\n                </p>\n                <button onClick={disconnect} className=\"btn-danger\">\n                  Disconnect\n                </button>\n              </div>\n            ) : (\n              <button\n                onClick={connect}\n                className=\"btn-primary\"\n                disabled={loading}\n              >\n                {loading ? \"Connecting...\" : \"Connect Wallet\"}\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Sale Status */}\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between items-center mb-3\">\n            <p className=\"body-sm text-[#4A4E69]\">Sale Status:</p>\n            <span className={getBadgeClass()}>{currentState}</span>\n          </div>\n\n          <div className=\"progress-container\">\n            <div\n              className=\"progress-bar\"\n              style={{ width: `${(totalSupply / maxSupply) * 100}%` }}\n            ></div>\n          </div>\n\n          <div className=\"flex justify-between items-center mt-2\">\n            <p className=\"body-sm text-[#9A8C98]\">Total Supply</p>\n            <p className=\"body-sm font-medium text-[#4A4E69]\">\n              {totalSupply} / {maxSupply} minted\n            </p>\n          </div>\n        </div>\n\n        {/* Mint Controls */}\n        {isConnected && currentState === \"PublicSaleActive\" && (\n          <div className=\"p-6 border border-[#C9ADA7]/30 rounded-lg bg-[#F2E9E4]/50 mb-6\">\n            <h3 className=\"heading-md mb-4 text-[#22223B]\">Public Mint</h3>\n\n            <div className=\"flex flex-col sm:flex-row sm:items-center gap-4 mb-6\">\n              <div className=\"flex items-center\">\n                <button\n                  onClick={() => setMintAmount((prev) => Math.max(1, prev - 1))}\n                  className=\"w-12 h-12 flex items-center justify-center bg-[#4A4E69] text-white rounded-l-lg hover:bg-[#22223B] transition-colors text-xl\"\n                  disabled={loading}\n                >\n                  -\n                </button>\n                <div className=\"w-16 h-12 flex items-center justify-center border-t border-b border-[#4A4E69]/20 bg-white text-[#22223B] font-bold\">\n                  {mintAmount}\n                </div>\n                <button\n                  onClick={() => setMintAmount((prev) => Math.min(5, prev + 1))}\n                  className=\"w-12 h-12 flex items-center justify-center bg-[#4A4E69] text-white rounded-r-lg hover:bg-[#22223B] transition-colors text-xl\"\n                  disabled={loading}\n                >\n                  +\n                </button>\n              </div>\n\n              <div className=\"flex-1\">\n                <p className=\"body-sm text-[#4A4E69] mb-1\">\n                  Price per NFT: <span className=\"font-bold\">0.08 ETH</span>\n                </p>\n                <p className=\"body-sm text-[#4A4E69]\">\n                  Total:{\" \"}\n                  <span className=\"font-bold\">\n                    {(0.08 * mintAmount).toFixed(2)} ETH\n                  </span>{\" \"}\n                  + gas\n                </p>\n              </div>\n            </div>\n\n            <button\n              onClick={handleMint}\n              className=\"w-full py-4 bg-[#9A8C98] text-white rounded-lg hover:bg-[#4A4E69] transition-colors font-bold text-lg\"\n              disabled={loading}\n            >\n              {loading\n                ? \"Processing Transaction...\"\n                : `Mint ${mintAmount} NFT${mintAmount > 1 ? \"s\" : \"\"}`}\n            </button>\n          </div>\n        )}\n\n        {/* Presale Message */}\n        {isConnected && currentState === \"PresaleActive\" && (\n          <div className=\"p-6 border border-[#4A4E69]/30 rounded-lg bg-[#F2E9E4]/50 mb-6\">\n            <h3 className=\"heading-md mb-3 text-[#22223B]\">Presale Active</h3>\n            <p className=\"body-md mb-4 text-[#4A4E69]\">\n              If you're on the allowlist, you can mint one NFT during the\n              presale period at a discounted price of 0.05 ETH.\n            </p>\n            <button\n              className=\"w-full py-3 bg-[#4A4E69] text-white rounded-lg hover:bg-[#22223B] transition-colors font-bold\"\n              disabled={loading}\n            >\n              Check Eligibility\n            </button>\n          </div>\n        )}\n\n        {/* Sold Out Message */}\n        {isConnected && currentState === \"SoldOut\" && (\n          <div className=\"p-6 border border-[#22223B]/30 rounded-lg bg-[#F2E9E4]/50 mb-6\">\n            <h3 className=\"heading-md mb-3 text-[#22223B]\">\n              Collection Sold Out\n            </h3>\n            <p className=\"body-md mb-4 text-[#4A4E69]\">\n              All NFTs have been minted. You can still purchase them on\n              secondary marketplaces.\n            </p>\n            <button className=\"w-full py-3 bg-[#22223B] text-white rounded-lg hover:bg-[#4A4E69] transition-colors font-bold\">\n              View on OpenSea\n            </button>\n          </div>\n        )}\n\n        {/* Revealed Message */}\n        {isConnected && currentState === \"Revealed\" && (\n          <div className=\"p-6 border border-[#C9ADA7]/30 rounded-lg bg-[#F2E9E4]/50 mb-6\">\n            <h3 className=\"heading-md mb-3 text-[#22223B]\">NFTs Revealed!</h3>\n            <p className=\"body-md mb-4 text-[#4A4E69]\">\n              The collection has been revealed. Check your NFTs to see what you\n              got!\n            </p>\n            <button className=\"w-full py-3 bg-[#C9ADA7] text-[#22223B] rounded-lg hover:bg-[#9A8C98] hover:text-white transition-colors font-bold\">\n              View My Collection\n            </button>\n          </div>\n        )}\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"p-4 bg-red-50 border border-red-200 text-red-700 rounded-lg mt-4\">\n            <p className=\"font-medium\">Error</p>\n            <p className=\"body-sm\">{error}</p>\n          </div>\n        )}\n      </div>\n\n      {/* Features Section */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\n        <div className=\"card bg-[#F2E9E4]/80\">\n          <div className=\"w-12 h-12 flex items-center justify-center bg-[#22223B] text-white rounded-full mb-4\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n              />\n            </svg>\n          </div>\n          <h3 className=\"heading-md mb-2 text-[#22223B]\">\n            Merkle Tree Airdrop\n          </h3>\n          <p className=\"body-sm text-[#4A4E69]\">\n            Efficient verification for presale eligibility using cryptographic\n            proofs.\n          </p>\n        </div>\n\n        <div className=\"card bg-[#F2E9E4]/80\">\n          <div className=\"w-12 h-12 flex items-center justify-center bg-[#4A4E69] text-white rounded-full mb-4\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n              />\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n              />\n            </svg>\n          </div>\n          <h3 className=\"heading-md mb-2 text-[#22223B]\">Commit-Reveal</h3>\n          <p className=\"body-sm text-[#4A4E69]\">\n            Fair randomization with a two-step process to prevent manipulation.\n          </p>\n        </div>\n\n        <div className=\"card bg-[#F2E9E4]/80\">\n          <div className=\"w-12 h-12 flex items-center justify-center bg-[#9A8C98] text-white rounded-full mb-4\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\"\n              />\n            </svg>\n          </div>\n          <h3 className=\"heading-md mb-2 text-[#22223B]\">Multicall Support</h3>\n          <p className=\"body-sm text-[#4A4E69]\">\n            Transfer multiple NFTs in a single transaction for gas efficiency.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 852, "column": 0}, "map": {"version":3,"sources":["file:///Users/basonpark/Desktop/metana-projects/module-8/merkle-tree/client/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 866, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 871, "column": 0}, "map": {"version":3,"sources":["file:///Users/basonpark/Desktop/metana-projects/module-8/merkle-tree/client/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 878, "column": 0}, "map": {"version":3,"sources":["file:///Users/basonpark/Desktop/metana-projects/module-8/merkle-tree/client/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 880, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}