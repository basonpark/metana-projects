/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GuessTheRandomNumberChallenge,
  GuessTheRandomNumberChallengeInterface,
} from "../GuessTheRandomNumberChallenge";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "n",
        type: "uint8",
      },
    ],
    name: "guess",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isComplete",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    payable: true,
    stateMutability: "payable",
    type: "constructor",
  },
];

const _bytecode =
  "0x6060604052670de0b6b3a76400003414151561001a57600080fd5b600143034042604051808360001916600019168152602001828152602001925050506040518091039020600190046000806101000a81548160ff021916908360ff160217905550610164806100706000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ba4c16b14610051578063b2fa1c9e1461006c575b600080fd5b61006a600480803560ff16906020019091905050610099565b005b341561007757600080fd5b61007f610117565b604051808215151515815260200191505060405180910390f35b670de0b6b3a7640000341415156100af57600080fd5b6000809054906101000a900460ff1660ff168160ff161415610114573373ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f19350505050151561011357600080fd5b5b50565b6000803073ffffffffffffffffffffffffffffffffffffffff1631149050905600a165627a7a72305820f2cf736e7f98a61f7081921f4a5d9323031b2edba4cf6369f70f00d85c32f14b0029";

type GuessTheRandomNumberChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GuessTheRandomNumberChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GuessTheRandomNumberChallenge__factory extends ContractFactory {
  constructor(...args: GuessTheRandomNumberChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<GuessTheRandomNumberChallenge> {
    return super.deploy(
      overrides || {}
    ) as Promise<GuessTheRandomNumberChallenge>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GuessTheRandomNumberChallenge {
    return super.attach(address) as GuessTheRandomNumberChallenge;
  }
  override connect(signer: Signer): GuessTheRandomNumberChallenge__factory {
    return super.connect(signer) as GuessTheRandomNumberChallenge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GuessTheRandomNumberChallengeInterface {
    return new utils.Interface(_abi) as GuessTheRandomNumberChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuessTheRandomNumberChallenge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GuessTheRandomNumberChallenge;
  }
}
