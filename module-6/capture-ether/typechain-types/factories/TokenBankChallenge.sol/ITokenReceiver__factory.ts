/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ITokenReceiver,
  ITokenReceiverInterface,
} from "../../TokenBankChallenge.sol/ITokenReceiver";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "value",
        type: "uint256",
      },
      {
        name: "data",
        type: "bytes",
      },
    ],
    name: "tokenFallback",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ITokenReceiver__factory {
  static readonly abi = _abi;
  static createInterface(): ITokenReceiverInterface {
    return new utils.Interface(_abi) as ITokenReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITokenReceiver {
    return new Contract(address, _abi, signerOrProvider) as ITokenReceiver;
  }
}
