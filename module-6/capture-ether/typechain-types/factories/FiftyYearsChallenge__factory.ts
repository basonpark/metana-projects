/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  FiftyYearsChallenge,
  FiftyYearsChallengeInterface,
} from "../FiftyYearsChallenge";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "index",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "index",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "index",
        type: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "upsert",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getTotal",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getLastItemTimestamp",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isComplete",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "player",
        type: "address",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "constructor",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
];

const _bytecode =
  "0x60606040526040516020806106b683398101604052808051906020019091905050670de0b6b3a76400003414151561003657600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000805480600101828161008b91906100d8565b916000526020600020906002020160006040805190810160405280348152602001635dfc0f0042018152509091909150600082015181600001556020820151816001015550505050610139565b81548183558181151161010557600202816002028360005260206000209182019101610104919061010a565b5b505050565b61013691905b8082111561013257600080820160009055600182016000905550600201610110565b5090565b90565b61056e806101486000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ff4c9161461007a5780632e1a7d4d146100b15780633b8f718a146100d4578063775a25e3146100f5578063aac01bc21461011e578063b2fa1c9e14610147575b005b341561008557600080fd5b61009b6004808035906020019091905050610174565b6040518082815260200191505060405180910390f35b34156100bc57600080fd5b6100d2600480803590602001909190505061019d565b005b6100f360048080359060200190919080359060200190919050506102ef565b005b341561010057600080fd5b610108610433565b6040518082815260200191505060405180910390f35b341561012957600080fd5b61013161048b565b6040518082815260200191505060405180910390f35b341561015257600080fd5b61015a6104c0565b604051808215151515815260200191505060405180910390f35b6000808281548110151561018457fe5b9060005260206000209060020201600001549050919050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101fc57600080fd5b60008381548110151561020b57fe5b906000526020600020906002020160010154421015151561022b57600080fd5b6000915060015490505b82811115156102a05760008181548110151561024d57fe5b9060005260206000209060020201600001548201915060008181548110151561027257fe5b9060005260206000209060020201600080820160009055600182016000905550508080600101915050610235565b600183016001819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015156102ea57600080fd5b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034d57600080fd5b6001548310158015610363575060008054905083105b1561039e5760008381548110151561037757fe5b9060005260206000209060020201905034816000016000828254019250508190555061042e565b6201518060006001600080549050038154811015156103b957fe5b9060005260206000209060020201600101540182101515156103da57600080fd5b3481600001819055508181600101819055506000805480600101828161040091906104e1565b9160005260206000209060020201600083909190915060008201548160000155600182015481600101555050505b505050565b6000806000809150600090505b600160008054905003811115156104835760008181548110151561046057fe5b906000526020600020906002020160000154820191508080600101915050610440565b819250505090565b60006201518060006001600080549050038154811015156104a857fe5b90600052602060002090600202016001015401905090565b6000803073ffffffffffffffffffffffffffffffffffffffff163114905090565b81548183558181151161050e5760020281600202836000526020600020918201910161050d9190610513565b5b505050565b61053f91905b8082111561053b57600080820160009055600182016000905550600201610519565b5090565b905600a165627a7a72305820c0a7786d868d5fed0b9347173ed34c3dd7837594001230a88288146ce79150c70029";

type FiftyYearsChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FiftyYearsChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FiftyYearsChallenge__factory extends ContractFactory {
  constructor(...args: FiftyYearsChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    player: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<FiftyYearsChallenge> {
    return super.deploy(
      player,
      overrides || {}
    ) as Promise<FiftyYearsChallenge>;
  }
  override getDeployTransaction(
    player: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(player, overrides || {});
  }
  override attach(address: string): FiftyYearsChallenge {
    return super.attach(address) as FiftyYearsChallenge;
  }
  override connect(signer: Signer): FiftyYearsChallenge__factory {
    return super.connect(signer) as FiftyYearsChallenge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FiftyYearsChallengeInterface {
    return new utils.Interface(_abi) as FiftyYearsChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FiftyYearsChallenge {
    return new Contract(address, _abi, signerOrProvider) as FiftyYearsChallenge;
  }
}
